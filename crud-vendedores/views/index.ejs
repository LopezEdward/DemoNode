<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <title>Lista de Vendedores</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body>
    <div class="container mt-5" id="parentNode">
        <h1 class="mb-4">Vendedores</h1>
        
        <!-- Formulario de Búsqueda -->
        <form id="get_form" action="/vendedores/data" method="GET" class="mb-4">
            <div class="row g-3 align-items-center">
                <div style="display: flex; max-width: 40%;">
                    <input style="margin-right: 0.5em;" class="form-control" type="number" name="from" id="from" placeholder="Ingresar el número inicial">
                    <input style="margin-left: 0.5em;" class="form-control" type="number"  name="limit" id="limit" placeholder="Ingresar la cantidad a recuperar">
                </div>
                <div class="col-auto">
                    <button type="submit" class="btn btn-primary">Buscar</button>
                </div>
                <div class="col-auto">
                    <a href="/add" class="btn btn-success">Nuevo Vendedor</a>
                </div>
            </div>
        </form>
        <div class="alert alert-info" role="alert" id="showeds">
            No se encontraron vendedores
        </div>
        <!-- Mostrar Error si existe 
        <% if (locals.error) { %>
            <div class="alert alert-danger" role="alert">
                <%= error %>
            </div>
        <% } %>

         Tabla de Vendedores
        <% if (locals.vendedores && vendedores.length > 0) { %>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Nombre</th>
                        <th>Apellido</th>
                        <th>Celular</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    <% vendedores.forEach(function(vendedor) { %>
                        <tr>
                            <td><%= vendedor.id_ven %></td>
                            <td><%= vendedor.nom_ven %></td>
                            <td><%= vendedor.apel_ven %></td>
                            <td><%= vendedor.cel_ven %></td>
                            <td>
                                <a href="/vendedores/editar/<%= vendedor.id_ven %>" class="btn btn-primary btn-sm">Editar</a>
                                <button class="btn btn-danger btn-sm" onclick="confirmarEliminacion(<%= vendedor.id_ven %>)">Eliminar</button>
                            </td>
                        </tr>
                    <% }); %>
                </tbody>
            </table>
        <% } else { %>
            <div class="alert alert-info" role="alert">
                No se encontraron vendedores
            </div>
        <% } %>-->
    </div>

    <script>
    let TB_RENDER = false;
    const form = document.getElementById("get_form");
    const md = document.getElementById("showeds");

    form.addEventListener("submit", async (e) => {
        e.preventDefault();

        const parentNode = await document.getElementById("parentNode");

        let min = await document.getElementById("from").value;
        let items = await document.getElementById("limit").value;

        let consult = `/vendedores/data?from=${min}&limit=${items}`; 

        const data = await fetch(consult);

        create_table(await data.json(), parentNode);
    });

    function create_table (data, parentNode) {
        if (TB_RENDER) {
            md.style.display = "block";
            document.getElementById("tb-render").remove();
            TB_RENDER = false;
        }

        let tb = document.createElement("table");
        tb.setAttribute("class", "table table-striped");
        tb.setAttribute("id", "tb-render")

        create_table_header(tb, ["id", "nombres", "apellidos", "celular", "distrito", "acciones"]);

        for (let item of data) {
            let row = document.createElement("tr");

            let idCell = document.createElement("td");
            idCell.textContent = item.id_ven;

            let nameCell = document.createElement("td");
            nameCell.textContent = item.nom_ven;

            let apeCell = document.createElement("td");
            apeCell.textContent = item.ape_ven;

            let celCell = document.createElement("td");
            celCell.textContent = item.cel_ven;
            
            let disCell = document.createElement("td");
            disCell.textContent = item.nom_dis;

            let delCell = document.createElement("td");
            let delButton = document.createElement("button");
            delButton.addEventListener("click", confirmarEliminacion);
            delButton.textContent = "Eliminar";
            
            delCell.appendChild(delButton);

            row.appendChild(idCell);
            row.appendChild(nameCell);
            row.appendChild(apeCell);
            row.appendChild(celCell);
            row.appendChild(disCell);
            row.appendChild(delCell);

            tb.appendChild(row);
        }

        parentNode.appendChild(tb);
        md.style.display = "none";
        TB_RENDER = true;
    }
    
    function create_table_header (tb, strs) {
        let th = document.createElement("thead");
        
        for (let item of strs) {
            let tc = document.createElement("td");

            tc.textContent = item;

            th.appendChild(tc);
        }

        tb.appendChild(th);
    }

    async function confirmarEliminacion(event) {
        const result = await Swal.fire({
            title: '¿Estás seguro?',
            text: 'Esta acción no se puede deshacer',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Sí, eliminar',
            cancelButtonText: 'Cancelar'
        });

        if (result.isConfirmed) {
            try {
                const id = event.target.parentNode.parentNode.children[0].textContent;

                const response = await fetch("/vendedores/delete/" + id, {
                    method: "DELETE"
                });
                const data = await response.json();

                if (data.success) {
                    await Swal.fire({
                        title: '¡Éxito!',
                        text: data.message,
                        icon: 'success'
                    });
                    //window.location.reload();
                    event.target.parentNode.parentNode.remove();
                } else {
                    throw new Error(data.message || 'Error al eliminar vendedor');
                }
            } catch (error) {
                Swal.fire({
                    title: 'Error',
                    text: error.message,
                    icon: 'error'
                });
            }
        }
    }
    </script>
</body>
</html>